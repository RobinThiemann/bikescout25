import { __awaiter, __extends, __generator } from "tslib";
import { WebPlugin } from "@capacitor/core";
var _a = require('electron'), clipboard = _a.clipboard, nativeImage = _a.nativeImage;
var ClipboardPluginElectron = /** @class */ (function (_super) {
    __extends(ClipboardPluginElectron, _super);
    function ClipboardPluginElectron() {
        return _super.call(this, {
            name: 'Clipboard',
            platforms: ['electron']
        }) || this;
    }
    ClipboardPluginElectron.prototype.write = function (options) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2 /*return*/, new Promise(function (resolve) {
                        if (options.string !== undefined) {
                            clipboard.writeText(options.string);
                        }
                        else if (options.url) {
                            clipboard.write({
                                text: options.url,
                                bookmark: options.label || ''
                            });
                        }
                        else if (options.image) {
                            var dataURL = options.image;
                            clipboard.write({
                                image: nativeImage.createFromDataURL(dataURL)
                            });
                        }
                        return resolve();
                    })];
            });
        });
    };
    ClipboardPluginElectron.prototype.read = function () {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2 /*return*/, new Promise(function (resolve) {
                        var availableFormats = clipboard.availableFormats();
                        if (availableFormats.length > 0) {
                            var format = availableFormats[availableFormats.length - 1];
                            if (format.includes("image")) {
                                return resolve({ "value": clipboard.readImage().toDataURL(), "type": format });
                            }
                            else {
                                format = availableFormats[0];
                                if (format === undefined) {
                                    return resolve({ "value": "", "type": "text/plain" });
                                }
                                else if (format === "text/plain") {
                                    return resolve({ "value": clipboard.readText(), "type": format });
                                }
                                else if (format === "text/html") {
                                    return resolve({ "value": clipboard.readHTML(), "type": format });
                                }
                            }
                        }
                        else {
                            return resolve({ "value": "", "type": "text/plain" });
                        }
                    })];
            });
        });
    };
    return ClipboardPluginElectron;
}(WebPlugin));
export { ClipboardPluginElectron };
var Clipboard = new ClipboardPluginElectron();
export { Clipboard };
//# sourceMappingURL=clipboard.js.map